{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://aetherlight.ai/schemas/pattern.schema.json",
  "title": "ÆtherLight Pattern",
  "description": "Machine-readable schema for ÆtherLight pattern library entries. DESIGN DECISION: Use JSON Schema Draft 7 for validation. WHY: Industry standard, wide tooling support, enables automated validation in CI/CD pipeline.",
  "type": "object",
  "required": [
    "id",
    "name",
    "version",
    "content",
    "metadata",
    "confidence",
    "created_at"
  ],
  "properties": {
    "id": {
      "type": "string",
      "pattern": "^Pattern-[A-Z]+-[0-9]{3}$",
      "description": "Unique pattern identifier. Format: Pattern-{CATEGORY}-{NUMBER}. Examples: Pattern-RUST-007, Pattern-CODE-042, Pattern-FAILURE-001",
      "examples": [
        "Pattern-RUST-007",
        "Pattern-CODE-042",
        "Pattern-FAILURE-001"
      ]
    },
    "name": {
      "type": "string",
      "minLength": 3,
      "maxLength": 100,
      "description": "Human-readable pattern name. Should be descriptive and concise.",
      "examples": [
        "Multi-Dimensional Pattern Matching",
        "Code Chunking Strategy",
        "Living Prompt Pattern"
      ]
    },
    "version": {
      "type": "integer",
      "minimum": 1,
      "description": "Pattern version number. Increments with each update. Enables version control and rollback."
    },
    "content": {
      "type": "object",
      "required": [
        "design_decision",
        "why",
        "reasoning_chain"
      ],
      "description": "Chain of Thought documentation following ÆtherLight standard. This is the core pattern content.",
      "properties": {
        "design_decision": {
          "type": "string",
          "description": "Key choice or approach taken. The WHAT.",
          "minLength": 10
        },
        "why": {
          "type": "string",
          "description": "Reasoning behind the decision. The WHY.",
          "minLength": 10
        },
        "reasoning_chain": {
          "type": "array",
          "description": "Step-by-step logical reasoning. Each step builds on previous. The HOW.",
          "items": {
            "type": "string",
            "minLength": 5
          },
          "minItems": 1
        },
        "code_example": {
          "type": "string",
          "description": "Optional code snippet demonstrating the pattern. Include language identifier."
        },
        "related_patterns": {
          "type": "array",
          "description": "IDs of related patterns. Enables pattern graph navigation.",
          "items": {
            "type": "string",
            "pattern": "^Pattern-[A-Z]+-[0-9]{3}$"
          }
        },
        "alternatives_considered": {
          "type": "array",
          "description": "Other approaches considered and why rejected. Prevents revisiting dead ends.",
          "items": {
            "type": "object",
            "required": [
              "approach",
              "why_rejected"
            ],
            "properties": {
              "approach": {
                "type": "string"
              },
              "why_rejected": {
                "type": "string"
              }
            }
          }
        },
        "future_improvements": {
          "type": "array",
          "description": "Planned enhancements or known limitations to address.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "metadata": {
      "type": "object",
      "required": [
        "domain",
        "language",
        "created_by"
      ],
      "description": "Context dimensions for multi-dimensional pattern matching.",
      "properties": {
        "domain": {
          "type": "array",
          "description": "Primary domain(s) where pattern applies. Examples: 'legal', 'marketing', 'healthcare'",
          "items": {
            "type": "string",
            "enum": [
              "legal",
              "marketing",
              "healthcare",
              "finance",
              "ecommerce",
              "education",
              "manufacturing",
              "logistics",
              "energy",
              "gaming",
              "general"
            ]
          },
          "minItems": 1
        },
        "language": {
          "type": "string",
          "description": "Programming language (if code pattern). Use 'general' for non-code patterns.",
          "enum": [
            "rust",
            "typescript",
            "javascript",
            "python",
            "dart",
            "go",
            "java",
            "csharp",
            "cpp",
            "general"
          ]
        },
        "framework": {
          "type": "array",
          "description": "Frameworks/libraries this pattern applies to. Optional.",
          "items": {
            "type": "string"
          },
          "examples": [
            [
              "tauri",
              "react"
            ],
            [
              "flutter"
            ],
            [
              "actix-web"
            ]
          ]
        },
        "tags": {
          "type": "array",
          "description": "Searchable tags for pattern discovery.",
          "items": {
            "type": "string"
          },
          "examples": [
            [
              "performance",
              "security",
              "offline-first"
            ],
            [
              "voice-capture",
              "transcription"
            ]
          ]
        },
        "created_by": {
          "type": "string",
          "description": "Author or source. Use 'community' for GitHub-scraped patterns."
        },
        "source_url": {
          "type": "string",
          "format": "uri",
          "description": "Source URL if scraped from GitHub or other public source."
        },
        "license": {
          "type": "string",
          "description": "License if applicable. Defaults to pattern library license.",
          "enum": [
            "MIT",
            "Apache-2.0",
            "BSD-3-Clause",
            "GPL-3.0",
            "proprietary",
            "public-domain"
          ]
        },
        "regulatory_context": {
          "type": "array",
          "description": "Regulatory compliance considerations. Important for legal/healthcare domains.",
          "items": {
            "type": "string",
            "enum": [
              "GDPR",
              "HIPAA",
              "CCPA",
              "SOC2",
              "PCI-DSS",
              "FERPA",
              "none"
            ]
          }
        }
      }
    },
    "confidence": {
      "type": "object",
      "required": [
        "overall_score",
        "dimensions"
      ],
      "description": "Multi-dimensional confidence scoring. >85% required for pattern library inclusion.",
      "properties": {
        "overall_score": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "description": "Weighted average of all dimension scores. Must be >= 85 for inclusion in pattern library."
        },
        "dimensions": {
          "type": "object",
          "required": [
            "semantic_similarity",
            "context_match",
            "keyword_overlap",
            "historical_success",
            "security_score",
            "code_quality_score"
          ],
          "description": "Individual dimension scores. Each 0-100. Weighted combination produces overall_score.",
          "properties": {
            "semantic_similarity": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "Embedding-based similarity score. Weight: 30%"
            },
            "context_match": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "Language, framework, domain fit. Weight: 15%"
            },
            "keyword_overlap": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "Token overlap with query. Weight: 10%"
            },
            "historical_success": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "Success rate from past usage. Weight: 15%"
            },
            "pattern_recency": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "How recently pattern was validated. Weight: 5%"
            },
            "user_preference": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "User's past preference for this pattern. Weight: 10%"
            },
            "team_usage": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "Team adoption rate. Weight: 5%"
            },
            "global_usage": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "Community adoption rate. Weight: 5%"
            },
            "security_score": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "Security scan results. 0 vulnerabilities = 100. Weight: 3%"
            },
            "code_quality_score": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "Code quality metrics (if applicable). Weight: 2%"
            }
          }
        },
        "validation": {
          "type": "object",
          "description": "Human validation records. Part of Pattern Validation System (P3-009).",
          "properties": {
            "human_reviewed": {
              "type": "boolean",
              "description": "Has this pattern been reviewed by humans?"
            },
            "reviewers": {
              "type": "array",
              "description": "Reviewer identifiers. Minimum 2 reviewers required for high-confidence patterns.",
              "items": {
                "type": "string"
              },
              "minItems": 2
            },
            "reviewed_at": {
              "type": "string",
              "format": "date-time",
              "description": "ISO 8601 timestamp of most recent review."
            },
            "security_scanned": {
              "type": "boolean",
              "description": "Has security scanning been performed?"
            },
            "security_scan_date": {
              "type": "string",
              "format": "date-time",
              "description": "ISO 8601 timestamp of most recent security scan."
            }
          }
        }
      }
    },
    "embedding": {
      "type": "object",
      "description": "Vector embedding for semantic search. Generated from content using all-MiniLM-L6-v2 (384 dimensions).",
      "required": [
        "model",
        "vector",
        "generated_at"
      ],
      "properties": {
        "model": {
          "type": "string",
          "description": "Embedding model used. Default: all-MiniLM-L6-v2",
          "examples": [
            "all-MiniLM-L6-v2",
            "text-embedding-ada-002"
          ]
        },
        "vector": {
          "type": "array",
          "description": "Embedding vector. Length depends on model (384 for all-MiniLM-L6-v2).",
          "items": {
            "type": "number"
          },
          "minItems": 1
        },
        "generated_at": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 timestamp when embedding was generated."
        }
      }
    },
    "usage_stats": {
      "type": "object",
      "description": "Pattern usage statistics. Updated after each use. Feeds into confidence scoring.",
      "properties": {
        "total_uses": {
          "type": "integer",
          "minimum": 0,
          "description": "Total number of times pattern has been used."
        },
        "success_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of successful uses (user validated as working)."
        },
        "failure_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of failed uses (user reported issue)."
        },
        "success_rate": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Success rate (success_count / total_uses). Feeds into historical_success dimension."
        },
        "last_used_at": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 timestamp of most recent use."
        },
        "avg_confidence_when_used": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "description": "Average confidence score when pattern was selected. Validates scoring accuracy."
        }
      }
    },
    "created_at": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp when pattern was created."
    },
    "updated_at": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp of most recent update."
    },
    "deprecated": {
      "type": "boolean",
      "description": "Is this pattern deprecated? If true, should not be suggested to users.",
      "default": false
    },
    "deprecated_reason": {
      "type": "string",
      "description": "Why was this pattern deprecated? Required if deprecated=true."
    },
    "superseded_by": {
      "type": "string",
      "pattern": "^Pattern-[A-Z]+-[0-9]{3}$",
      "description": "Pattern ID that supersedes this one. Links to replacement pattern."
    }
  }
}
