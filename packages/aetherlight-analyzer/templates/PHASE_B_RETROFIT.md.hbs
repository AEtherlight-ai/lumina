# Phase B: Retrofit - Refactor Existing Code

**VERSION:** 1.0
**CREATED:** {{timestamp}}
**STATUS:** Planning
**ESTIMATED DURATION:** {{estimatedWeeks}} weeks
**PATTERN:** Pattern-ANALYZER-002 (Incremental Sprint Generation)

---

## 🎯 Executive Summary

**DESIGN DECISION:** {{designDecision}}
**WHY:** {{why}}

**REASONING CHAIN:**
{{#each reasoningChain}}
{{add @index 1}}. {{this}}
{{/each}}

**THE INSIGHT:** {{insight}}

---

## 📋 Phase Overview

### Purpose
Refactor existing {{repositoryName}} codebase to:
{{#each refactoringGoals}}
- {{this}}
{{/each}}

### Success Criteria
{{#each successCriteria}}
- ✅ {{this}}
{{/each}}

---

## 📊 Technical Debt Analysis

**Total Debt Score:** {{debtScore}}/100 (Lower is better)

**Category Breakdown:**
{{#each debtCategories}}
- **{{name}}:** {{count}} issues ({{severity}} severity)
{{/each}}

**High Priority Issues:** {{highPriorityCount}}
**Medium Priority Issues:** {{mediumPriorityCount}}
**Low Priority Issues:** {{lowPriorityCount}}

---

## 🔧 Complexity Analysis

**Average Complexity:** {{averageComplexity}} (Target: <10)
**Median Complexity:** {{medianComplexity}}
**Max Complexity:** {{maxComplexity}} (Target: <15)

**High-Complexity Functions:** {{highComplexityCount}}

**Top Refactoring Targets:**
{{#each topRefactoringTargets}}
{{add @index 1}}. **{{functionName}}** (Complexity: {{complexity}})
   - File: `{{filePath}}:{{line}}`
   - Recommendation: {{recommendation}}
{{/each}}

---

## 📊 Task Breakdown

{{#each tasks}}
### Task {{id}}: {{title}}

**Agent:** {{agent}}
**Duration:** {{duration}} hours
**Dependencies:** {{#if dependencies}}{{#each dependencies}}{{this}}{{#unless @last}}, {{/unless}}{{/each}}{{else}}None{{/if}}
**Priority:** {{priority}}

**DESIGN DECISION:** {{designDecision}}
**WHY:** {{why}}

**REASONING CHAIN:**
{{#each reasoningChain}}
{{add @index 1}}. {{this}}
{{/each}}

**Current State:**
{{#each currentState}}
- {{this}}
{{/each}}

**Desired State:**
{{#each desiredState}}
- {{this}}
{{/each}}

**Refactoring Steps:**
{{#each refactoringSteps}}
{{add @index 1}}. {{this}}
{{/each}}

**Validation Criteria:**
{{#each validationCriteria}}
- [ ] {{this}}
{{/each}}

**Files to Refactor:**
{{#each filesToRefactor}}
- `{{this}}`
{{/each}}

**PATTERN:** {{pattern}}
**RELATED:** {{related}}

**Before Complexity:** {{beforeComplexity}}
**Target Complexity:** {{targetComplexity}}

{{#if breakingChanges}}
**⚠️ Breaking Changes:**
{{#each breakingChanges}}
- {{this}}
{{/each}}
{{/if}}

{{#if testingStrategy}}
**Testing Strategy:**
{{#each testingStrategy}}
- {{this}}
{{/each}}
{{/if}}

---

{{/each}}

## 📊 Task Dependencies Visualization

```mermaid
graph TD
{{#each taskDependencies}}
  {{from}} --> {{to}}
{{/each}}
```

---

## 🎯 Success Metrics

### Phase B Completion Criteria:
{{#each phaseCompletionCriteria}}
- [ ] {{this}}
{{/each}}

### Expected Outcomes:
{{#each expectedOutcomes}}
- {{this}}
{{/each}}

### Complexity Reduction Targets:
{{#each complexityTargets}}
- {{metric}}: {{before}} → {{target}} ({{improvement}} improvement)
{{/each}}

### Debt Reduction Targets:
{{#each debtTargets}}
- {{category}}: {{before}} issues → {{target}} issues ({{reduction}} reduction)
{{/each}}

---

## 🚦 Risk Analysis

{{#each risks}}
### Risk {{add @index 1}}: {{title}}
**Severity:** {{severity}}
**Probability:** {{probability}}

**Scenario:** {{scenario}}

**Mitigation:**
{{#each mitigation}}
- {{this}}
{{/each}}

**Contingency Plan:**
{{contingency}}

**Rollback Plan:**
{{rollback}}

---

{{/each}}

## 🗓️ Timeline

**Estimated Start:** {{estimatedStart}}
**Estimated Completion:** {{estimatedCompletion}}

**Week-by-Week Breakdown:**
{{#each weeklyBreakdown}}
### Week {{week}}
{{#each tasks}}
- **Day {{day}}:** {{taskId}} - {{taskTitle}} ({{hours}} hours)
{{/each}}
{{/each}}

---

## 📚 Refactoring Patterns

{{#each refactoringPatterns}}
### {{name}}

**Context:** {{context}}
**Problem:** {{problem}}
**Solution:** {{solution}}

**Example:**
```{{language}}
// Before
{{before}}

// After
{{after}}
```

**Why This Works:**
{{#each whyThisWorks}}
- {{this}}
{{/each}}

---

{{/each}}

## 🧪 Testing Strategy

### Test Coverage Goals:
{{#each testCoverageGoals}}
- {{metric}}: {{current}} → {{target}}
{{/each}}

### Testing Approach:
{{#each testingApproach}}
{{add @index 1}}. {{this}}
{{/each}}

### Critical Test Cases:
{{#each criticalTestCases}}
- {{this}}
{{/each}}

---

## 📝 Chain of Thought Documentation

**Refactoring Decisions:**

{{#each refactoringDecisions}}
### {{title}}

**DESIGN DECISION:** {{designDecision}}
**WHY:** {{why}}

**REASONING CHAIN:**
{{#each reasoningChain}}
{{add @index 1}}. {{this}}
{{/each}}

**EVIDENCE:**
{{#each evidence}}
- {{this}}
{{/each}}

**TRADE-OFFS:**
{{#each tradeOffs}}
- {{this}}
{{/each}}

---

{{/each}}

## 🔄 Migration Strategy

{{#if hasMigration}}
### Data Migration Required: {{migrationRequired}}

**Migration Steps:**
{{#each migrationSteps}}
{{add @index 1}}. {{this}}
{{/each}}

**Rollback Procedure:**
{{#each rollbackProcedure}}
{{add @index 1}}. {{this}}
{{/each}}
{{/if}}

---

## ✅ Pre-Sprint Checklist

Before starting Phase B execution:

- [ ] Review all refactoring tasks with team
- [ ] Create feature branch for Phase B
- [ ] Set up test coverage monitoring
- [ ] Verify all tests pass before refactoring
- [ ] Create execution log: `logs/phase-b/PHASE_B-execution.md`
- [ ] Document current behavior (before refactoring)
- [ ] Plan rollback strategy for each task
- [ ] Ensure CI/CD pipeline runs all tests

---

## 📊 Progress Tracking

**Complexity Reduction Progress:**
- Starting Average Complexity: {{startingComplexity}}
- Target Average Complexity: {{targetComplexity}}
- Current Progress: [ ] 0% → [ ] 25% → [ ] 50% → [ ] 75% → [ ] 100%

**Debt Reduction Progress:**
- Starting Debt Score: {{startingDebt}}
- Target Debt Score: {{targetDebt}}
- Current Progress: [ ] 0% → [ ] 25% → [ ] 50% → [ ] 75% → [ ] 100%

---

**STATUS:** Planning complete, ready for execution
**NEXT:** Begin Task {{firstTaskId}}
**OWNER:** {{owner}}
**CLASSIFICATION:** 🔐 INTERNAL

---

**Built with ❤️ using Chain of Thought methodology**

**Phase B: Strategic refactoring for long-term maintainability.**
